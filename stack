#include <iostream>
#include <stack>
// #include <string>
using namespace std;

string balancedBracket(string s)
{
    stack<char> brac;
    char pop_bracket;
    string result = "YES";
    for (int i = 0; i < s.length(); i++)
    {
        if (s[i] == '(' || s[i] == '{' || s[i] == '[')
        {
            brac.push(s[i]);
        }
        else
        {
            pop_bracket = brac.top();
            if (brac.empty() ||
                (pop_bracket == '(' && s[i] != ')') ||
                (pop_bracket == '{' && s[i] != '}') ||
                (pop_bracket == '[' && s[i] != ']'))
                result = "NO";
            brac.pop();
        }
    }
    // to check the insertion of elements in stack
    // while (!brac.empty())
    // {
    //     cout << brac.top() << " ";
    //     brac.pop();
    // }
    return result;
}

int main()
{
    string s;
    stack<int> stack1;
    stack<int> stack2;
    stack1.push(2);
    stack1.push(4);
    stack1.push(6);
    stack1.push(8);
    stack1.push(10);
    stack2.push(3);
    stack2.push(6);
    stack2.push(9);
    stack2.push(12);
    stack2.push(15);
    stack1.swap(stack2);
    while (!stack1.empty())
    {
        cout << stack1.top() << " ";
        stack1.pop();
    }
    cout << endl;
    while (!stack2.empty())
    {
        cout << stack2.top() << " ";
        stack2.pop();
    }
    cout << endl
         << "enter a string of bracked : ";
    cin >> s;
    cout << "Final result = " << balancedBracket(s);
}
